name: pytorch ci

on:
  pull_request:
  push:
    branches:
      - wgs/*
  workflow_dispatch:

env:
  PVC_PATH: '/nvme/share/share/github/cibuild/${{ github.repository }}'
  SOURCE_PATH: '/nvme/share/share/github/sourcecode'
  HOME: "/var/lib/jenkins"
  CI_IMAGE: "registry.sensetime.com/parrots/parrots:linux-bionic-cuda11.7-cudnn8-py3-gcc7"
  BUILD_ENVIRONMENT: "linux-bionic-cuda11.7-py3.10-gcc7"

jobs:
  Checkout:
    name: pull and rsync
    runs-on: tps-pytorch-ci
    timeout-minutes: 240
    steps:
      - name: rsync repo
        run: |
          cd ${SOURCE_PATH}/${{ github.event.repository.full_name }} && git pull
          cd ${PVC_PATH} && rm -rf ${GITHUB_RUN_NUMBER} && mkdir -p ${GITHUB_RUN_NUMBER}/artifacts
          rsync -a ${SOURCE_PATH}/${{ github.event.repository.full_name }} ${PVC_PATH}/${GITHUB_RUN_NUMBER}/
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}
          mv ${{ github.event.repository.name }} source && cd source && git checkout ${{ github.sha }} && git submodule sync && git submodule update --init --recursive

  linux-cuda117-py310-gcc7-build:
    name: linux-cuda117-py310-gcc7-build
    runs-on: tps-pytorch-ci
    needs: [Checkout]
    timeout-minutes: 240
    env:
      TORCH_CUDA_ARCH_LIST: "Volta;7.0;7.5;8.0;8.6"
      GPU_NUM: 1
      DEBUG: 0
    steps:
      - name: build
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run --tty --detach \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh build " && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )

  linux-cuda117-py310-gcc7-test-1:
    name: linux-cuda117-py310-gcc7-default-1
    runs-on: tps-pytorch-ci
    needs: [linux-cuda117-py310-gcc7-build]
    env:
      CI: "true"
      TEST_CONFIG: "default"
      NUM_TEST_SHARDS: 4
      SHARD_NUMBER: 1
      GPU_NUM: 1
      DEBUG: 0
    steps:
      - name: test
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          export GPU_ID=`python3 ${SOURCE_PATH}/tools/get_gpu.py delete ${GPU_NUM}` && echo "export GPU_ID=${GPU_ID}" >> ${GITHUB_JOB}
          export local_pip=`echo ${GPU_ID} | cut -d"," -f1`
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run  --gpus "device=${GPU_ID}" --tty --detach \
          --shm-size=2g --cap-add=SYS_PTRACE \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          -v ${SOURCE_PATH}/local/${local_pip}:${HOME}/.local \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh test" && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )

  linux-cuda117-py310-gcc7-test-2:
    name: linux-cuda117-py310-gcc7-default-2
    runs-on: tps-pytorch-ci
    needs: [linux-cuda117-py310-gcc7-build]
    env:
      CI: "true"
      TEST_CONFIG: "default"
      NUM_TEST_SHARDS: 4
      SHARD_NUMBER: 2
      GPU_NUM: 1
      DEBUG: 0
    steps:
      - name: test
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          export GPU_ID=`python3 ${SOURCE_PATH}/tools/get_gpu.py delete ${GPU_NUM}` && echo "export GPU_ID=${GPU_ID}" >> ${GITHUB_JOB}
          export local_pip=`echo ${GPU_ID} | cut -d"," -f1`
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run --gpus "device=${GPU_ID}" --tty --detach \
          --shm-size=2g --cap-add=SYS_PTRACE \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          -v ${SOURCE_PATH}/local/${local_pip}:${HOME}/.local \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh test"  && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )

  #该任务有测试用例需要a100的机器，因为要研发看下怎么注释掉，不然会有下列报错：Feature '.bf16' requires .target sm_80 or higher，Internal Triton PTX codegen error:
  linux-cuda117-py310-gcc7-test-3:
    name: linux-cuda117-py310-gcc7-default-3
    runs-on: tps-pytorch-ci
    needs: [linux-cuda117-py310-gcc7-build]
    env:
      CI: "true"
      TEST_CONFIG: "default"
      NUM_TEST_SHARDS: 4
      SHARD_NUMBER: 3
      GPU_NUM: 1
      DEBUG: 0
    steps:
      - name: test
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          export GPU_ID=`python3 ${SOURCE_PATH}/tools/get_gpu.py delete ${GPU_NUM}` && echo "export GPU_ID=${GPU_ID}" >> ${GITHUB_JOB}
          export local_pip=`echo ${GPU_ID} | cut -d"," -f1`
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run --gpus "device=${GPU_ID}" --tty --detach \
          --shm-size=2g --cap-add=SYS_PTRACE \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          -v ${SOURCE_PATH}/local/${local_pip}:${HOME}/.local \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh test"  && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )

  #torch._dynamo相关测例报错，需要研发查下
  linux-cuda117-py310-gcc7-test-4:
    name: linux-cuda117-py310-gcc7-default-4
    runs-on: tps-pytorch-ci
    needs: [linux-cuda117-py310-gcc7-build]
    env:
      CI: "true"
      TEST_CONFIG: "default"
      NUM_TEST_SHARDS: 4
      SHARD_NUMBER: 4
      GPU_NUM: 1
      DEBUG: 0
    steps:
      - name: test
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          export GPU_ID=`python3 ${SOURCE_PATH}/tools/get_gpu.py delete ${GPU_NUM}` && echo "export GPU_ID=${GPU_ID}" >> ${GITHUB_JOB}
          export local_pip=`echo ${GPU_ID} | cut -d"," -f1`
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run --gpus "device=${GPU_ID}" --tty --detach \
          --shm-size=2g --cap-add=SYS_PTRACE \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          -v ${SOURCE_PATH}/local/${local_pip}:${HOME}/.local \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh test" && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )

  linux-cuda117-py310-gcc7-test-5:
    name: linux-cuda117-py310-gcc7-distributed-1
    runs-on: tps-pytorch-ci
    needs: [linux-cuda117-py310-gcc7-build]
    env:
      CI: "true"
      TEST_CONFIG: "distributed"
      NUM_TEST_SHARDS: 3
      SHARD_NUMBER: 1
      GPU_NUM: 2
      DEBUG: 0
    steps:
      - name: test
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          export GPU_ID=`python3 ${SOURCE_PATH}/tools/get_gpu.py delete ${GPU_NUM}` && echo "export GPU_ID=${GPU_ID}" >> ${GITHUB_JOB}
          export local_pip=`echo ${GPU_ID} | cut -d"," -f1`
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run --runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=${GPU_ID} --tty --detach \
          --shm-size=2g --cap-add=SYS_PTRACE \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          -v ${SOURCE_PATH}/local/${local_pip}:${HOME}/.local \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh test"  && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )

  linux-cuda117-py310-gcc7-test-6:
    name: linux-cuda117-py310-gcc7-distributed-2
    runs-on: tps-pytorch-ci
    needs: [linux-cuda117-py310-gcc7-build]
    env:
      CI: "true"
      TEST_CONFIG: "distributed"
      NUM_TEST_SHARDS: 3
      SHARD_NUMBER: 3
      GPU_NUM: 2
      DEBUG: 0
    steps:
      - name: test
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          export GPU_ID=`python3 ${SOURCE_PATH}/tools/get_gpu.py delete ${GPU_NUM}` && echo "export GPU_ID=${GPU_ID}" >> ${GITHUB_JOB}
          export local_pip=`echo ${GPU_ID} | cut -d"," -f1`
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run ---runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=${GPU_ID} --tty --detach \
          --shm-size=2g --cap-add=SYS_PTRACE \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          -v ${SOURCE_PATH}/local/${local_pip}:${HOME}/.local \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh test"  && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )

  linux-cuda117-py310-gcc7-test-7:
    name: linux-cuda117-py310-gcc7-distributed-3
    runs-on: tps-pytorch-ci
    needs: [linux-cuda117-py310-gcc7-build]
    env:
      CI: "true"
      TEST_CONFIG: "distributed"
      NUM_TEST_SHARDS: 3
      SHARD_NUMBER: 3
      GPU_NUM: 2
      DEBUG: 0
    steps:
      - name: test
        run: |
          set -e
          set -o pipefail
          cd ${PVC_PATH}/${GITHUB_RUN_NUMBER}/source && echo '${{ toJSON(env) }}' |grep -v '{\|}'> ${GITHUB_JOB} && sed -i 's/\"//g' ${GITHUB_JOB} && sed -i 's/,//g' ${GITHUB_JOB} && sed -i 's/:[ ]/=\"/g' ${GITHUB_JOB} && sed -i 's/$/&\"/' ${GITHUB_JOB} && sed -i 's/^/&export/' ${GITHUB_JOB}
          export GPU_ID=`python3 ${SOURCE_PATH}/tools/get_gpu.py delete ${GPU_NUM}` && echo "export GPU_ID=${GPU_ID}" >> ${GITHUB_JOB}
          export local_pip=`echo ${GPU_ID} | cut -d"," -f1`
          docker ps -aq -f status=exited | xargs -r docker rm || echo "no exiting container"
          container_name=$(docker run --runtime=nvidia -e NVIDIA_VISIBLE_DEVICES=${GPU_ID} --tty --detach \
          --shm-size=2g --cap-add=SYS_PTRACE \
          -v ${PVC_PATH}/${GITHUB_RUN_NUMBER}/:/home/ \
          -v ${SOURCE_PATH}/tools:${HOME}/tools \
          -v ${SOURCE_PATH}/local/${local_pip}:${HOME}/.local \
          ${CI_IMAGE} )
          docker exec -t "${container_name}" bash -c "source /home/source/${GITHUB_JOB} && ${HOME}/tools/run.sh test"  && docker rm -f ${container_name} || ( docker rm -f ${container_name} && exit 1 )
